{"version":3,"file":"content.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAeA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AACA;AAAA;AAAA;AACA;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAJA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AAAA;AAyBA;AAAA;AAzBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAMA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA","sources":["webpack://javdb-extension/./src/utils/config.js","webpack://javdb-extension/./src/utils/storage.js","webpack://javdb-extension/./src/utils/utils.js","webpack://javdb-extension/webpack/bootstrap","webpack://javdb-extension/webpack/runtime/define property getters","webpack://javdb-extension/webpack/runtime/hasOwnProperty shorthand","webpack://javdb-extension/webpack/runtime/make namespace object","webpack://javdb-extension/./src/content/content.js"],"sourcesContent":["export const STORAGE_KEYS = {\r\n    // Data\r\n    VIEWED_RECORDS: 'viewed',\r\n\r\n    // Settings\r\n    SETTINGS: 'settings',\r\n\r\n    // For popup.js legacy keys - can be removed after migration\r\n    HIDE_WATCHED_VIDEOS: 'hideWatchedVideos',\r\n    HIDE_VIEWED_VIDEOS: 'hideViewedVideos',\r\n    HIDE_VR_VIDEOS: 'hideVRVideos',\r\n    STORED_IDS: 'myIds',\r\n    BROWSE_HISTORY: 'videoBrowseHistory',\r\n    LAST_UPLOAD_TIME: 'lastUploadTime',\r\n    LAST_EXPORT_TIME: 'lastExportTime',\r\n};\r\n\r\nexport const DEFAULT_SETTINGS = {\r\n    display: {\r\n        hideWatched: false,\r\n        hideViewed: false,\r\n        hideVR: false,\r\n    },\r\n    webdav: {\r\n        enabled: false,\r\n        url: '',\r\n        username: '',\r\n        password: '',\r\n        autoSync: false,\r\n    },\r\n    version: '1.0.1', // Default version\r\n}; ","// storage.js\r\n// 封装 chrome.storage，兼容 GM_setValue/GM_getValue\r\n\r\nimport { STORAGE_KEYS, DEFAULT_SETTINGS } from './config.js';\r\n\r\nexport function setValue(key, value) {\r\n  return chrome.storage.local.set({ [key]: value });\r\n}\r\n\r\nexport function getValue(key, defaultValue) {\r\n  return new Promise(resolve => {\r\n    chrome.storage.local.get([key], result => {\r\n      resolve(result[key] !== undefined ? result[key] : defaultValue);\r\n    });\r\n  });\r\n}\r\n\r\nexport async function getSettings() {\r\n    const storedSettings = await getValue(STORAGE_KEYS.SETTINGS, {});\r\n    // Deep merge to ensure all nested properties from default are present\r\n    return {\r\n        ...DEFAULT_SETTINGS,\r\n        ...storedSettings,\r\n        display: {\r\n            ...DEFAULT_SETTINGS.display,\r\n            ...(storedSettings.display || {}),\r\n        },\r\n        webdav: {\r\n            ...DEFAULT_SETTINGS.webdav,\r\n            ...(storedSettings.webdav || {}),\r\n        },\r\n    };\r\n}\r\n\r\nexport function saveSettings(settings) {\r\n    return setValue(STORAGE_KEYS.SETTINGS, settings);\r\n} ","export function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// content.js\n// 注入到 javdb.com 页面，负责页面 DOM 操作、UI 注入、状态标记等\nimport { getValue, setValue, getSettings } from '../utils/storage.js';\nimport { sleep } from '../utils/utils.js';\n\nconst STATE = {\n    settings: {},\n    watchedIds: new Set(),\n    viewedIds: new Set(),\n    isSearchPage: false,\n    observer: null,\n    debounceTimer: null,\n    originalFaviconUrl: ''\n};\n\nconst SELECTORS = {\n    MOVIE_LIST_ITEM: '.movie-list .item',\n    VIDEO_TITLE: 'div.video-title > strong',\n    VIDEO_ID: '.uid, .item-id > strong',\n    TAGS_CONTAINER: '.tags.has-addons',\n    FAVICON: \"link[rel~='icon']\",\n    VIDEO_DETAIL_ID: '.panel-block.first-block',\n    SEARCH_RESULT_PAGE: '.container .column.is-9',\n    EXPORT_TOOLBAR: '.toolbar, .breadcrumb ul'\n};\n\nconst log = (...args) => console.log('[JavDB Ext]', ...args);\n\n// --- Core Logic ---\n\nasync function initialize() {\n    log('Extension initializing...');\n\n    // 1. Fetch all necessary data and settings at once\n    const [settings, watched, viewed] = await Promise.all([\n        getSettings(),\n        getValue('myIds', []),\n        getValue('videoBrowseHistory', [])\n    ]);\n    STATE.settings = settings;\n    STATE.watchedIds = new Set(watched);\n    STATE.viewedIds = new Set(viewed);\n    log(`Loaded ${STATE.watchedIds.size} watched, ${STATE.viewedIds.size} viewed.`);\n\n    // 2. Check page context\n    STATE.isSearchPage = !!document.querySelector(SELECTORS.SEARCH_RESULT_PAGE);\n    if (STATE.isSearchPage) {\n        log('Search page detected, hiding functions will be disabled.');\n    }\n\n    // 3. Store original favicon\n    const faviconLink = document.querySelector(SELECTORS.FAVICON);\n    if (faviconLink) {\n        STATE.originalFaviconUrl = faviconLink.href;\n    }\n\n    // 4. Initial processing of visible items\n    processVisibleItems();\n\n    // 5. Setup MutationObserver to handle dynamic content\n    setupObserver();\n\n    // 6. Handle specific page logic\n    if (window.location.pathname.startsWith('/v/')) {\n        handleVideoDetailPage();\n    }\n    \n    // 7. Initialize export functionality on relevant pages\n    initExportFeature();\n}\n\n\nfunction processVisibleItems() {\n    document.querySelectorAll(SELECTORS.MOVIE_LIST_ITEM).forEach(item => processItem(item));\n}\n\nfunction setupObserver() {\n    const targetNode = document.querySelector('.movie-list');\n    if (!targetNode) return;\n\n    STATE.observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n            if (mutation.addedNodes.length > 0) {\n                clearTimeout(STATE.debounceTimer);\n                STATE.debounceTimer = setTimeout(processVisibleItems, 300);\n            }\n        });\n    });\n\n    STATE.observer.observe(targetNode, { childList: true, subtree: true });\n}\n\nfunction shouldHide(item) {\n    if (STATE.isSearchPage) return false;\n    \n    const { hideWatched, hideViewed, hideVR } = STATE.settings.display;\n\n    const isWatched = item.classList.contains('watched-item');\n    const isViewed = item.classList.contains('viewed-item');\n    const isVR = item.querySelector('.tag.is-link')?.textContent.trim() === 'VR' || item.querySelector('.panel-block.tags')?.innerText.includes('VR');\n    \n    if (hideWatched && isWatched) return true;\n    if (hideViewed && isViewed && !isWatched) return true;\n    if (hideVR && isVR) return true;\n    \n    return false;\n}\n\nfunction processItem(item) {\n    const videoIdElement = item.querySelector(SELECTORS.VIDEO_ID);\n    if (!videoIdElement) return;\n    \n    const videoId = videoIdElement.textContent.trim();\n    if (!videoId) return;\n\n    // Remove existing tags to avoid duplication\n    item.querySelectorAll('.watched-tag, .viewed-tag').forEach(tag => tag.remove());\n\n    const tagContainer = item.querySelector(SELECTORS.TAGS_CONTAINER);\n    if (!tagContainer) return;\n    \n    if (STATE.watchedIds.has(videoId)) {\n        addTag(tagContainer, '我看過這部影片', 'is-success');\n        item.classList.add('watched-item');\n    } else if (STATE.viewedIds.has(videoId)) {\n        addTag(tagContainer, '已浏览', 'is-warning');\n        item.classList.add('viewed-item');\n    }\n\n    if (shouldHide(item)) {\n        item.style.display = 'none';\n    }\n}\n\nfunction addTag(container, text, style) {\n    const tag = document.createElement('span');\n    tag.className = `tag ${style} is-light watched-tag`;\n    tag.textContent = text;\n    container.appendChild(tag);\n}\n\n// --- Page-Specific Logic ---\n\nasync function handleVideoDetailPage() {\n    const videoIdMatch = window.location.pathname.match(/\\/v\\/(\\w+)/);\n    if (!videoIdMatch) return;\n    const videoId = videoIdMatch[1];\n    \n    const isWatched = STATE.watchedIds.has(videoId);\n    const isViewed = STATE.viewedIds.has(videoId);\n\n    if (isWatched || isViewed) {\n        setFavicon(chrome.runtime.getURL(\"src/assets/jav.png\"));\n    }\n    \n    if (!isWatched && !isViewed) {\n        setTimeout(async () => {\n            const currentViewed = await getValue('videoBrowseHistory', []);\n            if (!currentViewed.includes(videoId)) {\n                currentViewed.push(videoId);\n                await setValue('videoBrowseHistory', currentViewed);\n                log(`${videoId} added to viewed history.`);\n                setFavicon(chrome.runtime.getURL(\"src/assets/jav.png\"));\n            }\n        }, getRandomDelay(3000, 5000));\n    }\n}\n\n// --- Utils ---\n\nfunction setFavicon(url) {\n    let link = document.querySelector(SELECTORS.FAVICON);\n    if (!link) {\n        link = document.createElement('link');\n        link.rel = 'icon';\n        document.head.appendChild(link);\n    }\n    if (url.endsWith('.png')) {\n        link.type = 'image/png';\n    }\n    link.href = url;\n}\n\nfunction getRandomDelay(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n\n// --- Export Feature ---\n// This part remains largely unchanged as it's a separate utility\n// and doesn't depend heavily on the main settings.\n// We'll just ensure it's initialized correctly.\n\nlet isExporting = false;\nlet exportButton, stopButton;\n\nfunction initExportFeature() {\n    const validUrlPatterns = [\n      /https:\\/\\/javdb\\.com\\/users\\/want_watch_videos.*/,\n      /https:\\/\\/javdb\\.com\\/users\\/watched_videos.*/,\n      /https:\\/\\/javdb\\.com\\/users\\/list_detail.*/,\n      /https:\\/\\/javdb\\.com\\/lists.*/\n    ];\n\n    if (validUrlPatterns.some(pattern => pattern.test(window.location.href))) {\n        createExportUI();\n        checkExportState();\n    }\n}\n\nfunction createExportUI() {\n    // ... (The implementation of createExportButton from the original script)\n    // For brevity, assuming the UI creation code is here.\n    const maxPageInput = document.createElement('input');\n    maxPageInput.type = 'number';\n    maxPageInput.id = 'maxPageInput';\n    maxPageInput.placeholder = '页数(空则全部)';\n    maxPageInput.className = 'input is-small';\n    maxPageInput.style.width = '120px';\n    maxPageInput.style.marginRight = '8px';\n\n    exportButton = document.createElement('button');\n    exportButton.textContent = '导出页面数据';\n    exportButton.className = 'button is-small is-primary';\n    exportButton.addEventListener('click', startExport);\n\n    stopButton = document.createElement('button');\n    stopButton.textContent = '停止';\n    stopButton.className = 'button is-small is-danger';\n    stopButton.style.marginLeft = '8px';\n    stopButton.disabled = true;\n    stopButton.addEventListener('click', stopExport);\n\n    const container = document.createElement('div');\n    container.className = 'level-item';\n    container.appendChild(maxPageInput);\n    container.appendChild(exportButton);\n    container.appendChild(stopButton);\n    \n    const target = document.querySelector(SELECTORS.EXPORT_TOOLBAR);\n    if (target) {\n        target.appendChild(container);\n    }\n}\n\nasync function startExport() {\n    const maxPageInput = document.getElementById('maxPageInput');\n    const totalCount = getTotalVideoCount();\n    const maxPages = Math.ceil(totalCount / 20); // Assuming 20 items per page\n    const pagesToExport = maxPageInput.value ? parseInt(maxPageInput.value) : maxPages;\n    const currentPage = new URLSearchParams(window.location.search).get('page') || 1;\n    \n    isExporting = true;\n    exportButton.disabled = true;\n    stopButton.disabled = false;\n    \n    let allVideos = [];\n    \n    for (let i = 0; i < pagesToExport; i++) {\n        if (!isExporting) break;\n        \n        const pageNum = parseInt(currentPage) + i;\n        if (pageNum > maxPages) break;\n        \n        exportButton.textContent = `导出中... ${pageNum}/${maxPages}`;\n        \n        if (i > 0) { // Navigate to next page if not the first page\n            const url = new URL(window.location.href);\n            url.searchParams.set('page', pageNum);\n            window.location.href = url.href;\n            await new Promise(resolve => window.addEventListener('load', resolve, { once: true }));\n        }\n        \n        allVideos = allVideos.concat(scrapeVideosFromPage());\n        await sleep(1000); // Pause between pages\n    }\n    \n    if (allVideos.length > 0) {\n        downloadExportedData(allVideos);\n    }\n    \n    finishExport();\n}\n\nfunction scrapeVideosFromPage() {\n    return Array.from(document.querySelectorAll(SELECTORS.MOVIE_LIST_ITEM)).map(item => {\n        const idElement = item.querySelector(SELECTORS.VIDEO_ID);\n        const titleElement = item.querySelector(SELECTORS.VIDEO_TITLE);\n        return {\n            id: idElement ? idElement.textContent.trim() : '',\n            title: titleElement ? titleElement.textContent.trim() : ''\n        };\n    });\n}\n\nfunction downloadExportedData(data) {\n    const json = JSON.stringify(data, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.download = `javdb-export-${new Date().toISOString().slice(0, 10)}.json`;\n    a.href = url;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n}\n\nfunction getTotalVideoCount() {\n    const activeLink = document.querySelector('a.is-active');\n    if (activeLink) {\n        const match = activeLink.textContent.match(/\\((\\d+)\\)/);\n        return match ? parseInt(match[1], 10) : 0;\n    }\n    return 0;\n}\n\n\nfunction stopExport() {\n    isExporting = false;\n    finishExport();\n}\n\nfunction finishExport() {\n    isExporting = false;\n    exportButton.disabled = false;\n    stopButton.disabled = true;\n    exportButton.textContent = '导出页面数据';\n}\n\n\nasync function checkExportState() {\n    // This function can be simplified or removed if we don't need to persist export state across page loads.\n    // For now, we will rely on manual start/stop.\n}\n\n\n// --- Entry Point ---\ninitialize().catch(err => console.error('[JavDB Ext] Initialization failed:', err)); "],"names":[],"sourceRoot":""}