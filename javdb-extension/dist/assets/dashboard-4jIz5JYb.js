import"./modulepreload-polyfill-B5Qt9EMX.js";import{a as w,g as S,S as b,D as I,s as L,b as p}from"./storage-BU9Pj700.js";const m={settings:I,records:[],isInitialized:!1};async function B(){if(m.isInitialized)return;m.settings=await w();const e=await S(b.VIEWED_RECORDS,{});m.records=Object.values(e),m.isInitialized=!0,console.log("Global state initialized.",m)}function f(e,l="info"){const s=document.getElementById("message-container");if(!s)return;const a=document.createElement("div");a.className=`message ${l}`,a.textContent=e,s.appendChild(a),setTimeout(()=>a.remove(),3e3)}document.addEventListener("DOMContentLoaded",async()=>{await B(),T(),k(),C(),$(),V()});function T(){const e=document.querySelectorAll(".tab-link"),l=document.querySelectorAll(".tab-content"),s=c=>{var g;if(!c)return;const n=c.getAttribute("data-tab");n&&(e.forEach(r=>r.classList.remove("active")),l.forEach(r=>r.classList.remove("active")),c.classList.add("active"),(g=document.getElementById(n))==null||g.classList.add("active"),history.pushState?history.pushState(null,"",`#${n}`):location.hash=`#${n}`)};e.forEach(c=>{c.addEventListener("click",()=>s(c))});const a=window.location.hash.substring(1)||"tab-records",d=document.querySelector(`.tab-link[data-tab="${a}"]`);s(d||e[0])}function k(){const e=document.getElementById("searchInput"),l=document.getElementById("filterSelect"),s=document.getElementById("videoList"),a=document.querySelector(".pagination");if(!e||!s)return;let d=1;const c=20;let n=[];function g(){const u=e.value.toLowerCase(),v=l.value;n=m.records.filter(o=>{const h=!u||o.id.toLowerCase().includes(u)||o.title.toLowerCase().includes(u),t=v==="all"||o.status===v;return h&&t})}function r(){if(s.innerHTML="",n.length===0){s.innerHTML='<li class="empty-list">No records match your criteria.</li>';return}const u=(d-1)*c,v=n.slice(u,u+c),o=m.settings.searchEngines[0];v.forEach(h=>{const t=document.createElement("li");t.className="video-item";const E=o?o.urlTemplate.replace("{{ID}}",encodeURIComponent(h.id)):"#";t.innerHTML=`
                <span class="video-id"><a href="${E}" target="_blank">${h.id}</a></span>
                <span class="video-title">${h.title}</span>
                <span class="video-status status-${h.status}">${h.status}</span>
            `,s.appendChild(t)})}function y(){a.innerHTML="";const u=Math.ceil(n.length/c);if(!(u<=1))for(let v=1;v<=u;v++){const o=document.createElement("button");o.textContent=String(v),o.className=`page-button ${v===d?"active":""}`,o.addEventListener("click",()=>{d=v,i()}),a.appendChild(o)}}function i(){r(),y()}e.addEventListener("input",()=>{d=1,g(),i()}),l.addEventListener("change",()=>{d=1,g(),i()}),g(),i()}function C(){const e=document.getElementById("webdavEnabled"),l=document.getElementById("webdavUrl"),s=document.getElementById("webdavUser"),a=document.getElementById("webdavPass"),d=document.getElementById("webdavAutoSync"),c=document.getElementById("webdav-sync-interval"),n=document.getElementById("saveWebdavSettings"),g=document.getElementById("testWebdavConnection"),r=document.getElementById("last-sync-time"),y=document.getElementById("hideViewed"),i=document.getElementById("hideBrowsed"),u=document.getElementById("hideVR");function v(){const{webdav:t,display:E}=m.settings;e.checked=t.enabled,l.value=t.url,s.value=t.username,a.value=t.password,d.checked=t.autoSync,c.value=String(t.syncInterval),r.textContent=t.lastSync?new Date(t.lastSync).toLocaleString():"Never",document.getElementById("webdav-fields-container").style.display=t.enabled?"block":"none",y.checked=E.hideViewed,i.checked=E.hideBrowsed,u.checked=E.hideVR}async function o(){const t={...m.settings,webdav:{enabled:e.checked,url:l.value.trim(),username:s.value.trim(),password:a.value,autoSync:d.checked,syncInterval:parseInt(c.value,10),lastSync:m.settings.webdav.lastSync},display:{hideViewed:y.checked,hideBrowsed:i.checked,hideVR:u.checked}};await L(t),m.settings=t,chrome.runtime.sendMessage({type:"setup-alarms"}),f("Settings saved successfully!")}function h(){o().then(()=>{g.textContent="Testing...",g.disabled=!0,chrome.runtime.sendMessage({type:"webdav-test"},t=>{t.success?f("WebDAV connection successful!"):f(`WebDAV connection failed: ${t.error}`,"error"),g.textContent="Test Connection",g.disabled=!1})})}n.addEventListener("click",o),e.addEventListener("change",()=>{document.getElementById("webdav-fields-container").style.display=e.checked?"block":"none"}),g.addEventListener("click",h),y.addEventListener("change",o),i.addEventListener("change",o),u.addEventListener("change",o),v()}function $(){const e=document.getElementById("jsonConfig"),l=document.getElementById("editJsonBtn"),s=document.getElementById("saveJsonBtn");if(!e)return;function a(){e.value=JSON.stringify(m.settings,null,2)}function d(){e.readOnly=!1,e.focus(),l.classList.add("hidden"),s.classList.remove("hidden"),f("JSON editing enabled. Be careful!","warn")}async function c(){try{const n=JSON.parse(e.value);await L(n),m.settings=n,e.readOnly=!0,s.classList.add("hidden"),l.classList.remove("hidden"),f("JSON configuration saved successfully. Page will reload."),setTimeout(()=>window.location.reload(),1500)}catch(n){f(`Error saving JSON: ${n.message}`,"error")}}l.addEventListener("click",d),s.addEventListener("click",c),a()}function V(){const e=document.getElementById("log-level-filter"),l=document.getElementById("refresh-logs-button"),s=document.getElementById("clear-logs-button"),a=document.getElementById("log-body");if(!e||!a)return;let d=[];const c=()=>{const r=e.value;if(a.innerHTML="",d.length===0){a.innerHTML='<tr><td colspan="4" style="text-align: center;">No logs found.</td></tr>';return}const y=d.filter(i=>r==="ALL"||i.level===r);for(const i of y.slice().reverse()){const u=a.insertRow();u.innerHTML=`
                <td class="timestamp">${new Date(i.timestamp).toLocaleString()}</td>
                <td class="level level-${i.level}">${i.level}</td>
                <td class="message">${i.message}</td>
                <td class="data">${i.data?`<pre>${JSON.stringify(i.data,null,2)}</pre>`:""}</td>
            `}},n=()=>{chrome.runtime.sendMessage({type:"get-logs"},r=>{r!=null&&r.success?(d=r.logs||[],c()):f("Failed to fetch logs.","error")})},g=()=>{confirm("Are you sure you want to clear all logs? This cannot be undone.")&&p(b.LOGS,[]).then(()=>{f("Logs cleared successfully."),n()})};e.addEventListener("change",c),l.addEventListener("click",n),s.addEventListener("click",g),n()}
